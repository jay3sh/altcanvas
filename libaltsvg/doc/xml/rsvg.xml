<refentry id="rsvg-Core-API">
<refmeta>
<refentrytitle role="top_of_page">Core API</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>RSVG Library</refmiscinfo>
</refmeta>

<refnamediv>
<refname>Core API</refname>
<refpurpose><para>
Create and manipulate SVG objects
</para></refpurpose>
<!--[<xref linkend="desc" endterm="desc.title"/>]-->
</refnamediv>

<refsynopsisdiv role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis>



enum                <link linkend="RsvgError">RsvgError</link>;
#define             <link linkend="RSVG-ERROR:CAPS">RSVG_ERROR</link>
<link linkend="GQuark">GQuark</link>              <link linkend="rsvg-error-quark">rsvg_error_quark</link>                    (void);
<link linkend="void">void</link>                <link linkend="rsvg-init">rsvg_init</link>                           (void);
<link linkend="void">void</link>                <link linkend="rsvg-term">rsvg_term</link>                           (void);
<link linkend="void">void</link>                <link linkend="rsvg-set-default-dpi">rsvg_set_default_dpi</link>                (<link linkend="double">double</link> dpi);
<link linkend="void">void</link>                <link linkend="rsvg-set-default-dpi-x-y">rsvg_set_default_dpi_x_y</link>            (<link linkend="double">double</link> dpi_x,
                                                         <link linkend="double">double</link> dpi_y);
<link linkend="RsvgHandle">RsvgHandle</link>*         <link linkend="rsvg-handle-new">rsvg_handle_new</link>                     (void);
<link linkend="void">void</link>                <link linkend="rsvg-handle-free">rsvg_handle_free</link>                    (<link linkend="RsvgHandle">RsvgHandle</link> *handle);
<link linkend="void">void</link>                <link linkend="rsvg-handle-set-dpi">rsvg_handle_set_dpi</link>                 (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="double">double</link> dpi);
<link linkend="void">void</link>                <link linkend="rsvg-handle-set-dpi-x-y">rsvg_handle_set_dpi_x_y</link>             (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="double">double</link> dpi_x,
                                                         <link linkend="double">double</link> dpi_y);
<link linkend="gboolean">gboolean</link>            <link linkend="rsvg-handle-write">rsvg_handle_write</link>                   (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         const <link linkend="guchar">guchar</link> *buf,
                                                         <link linkend="gsize">gsize</link> count,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="gboolean">gboolean</link>            <link linkend="rsvg-handle-close">rsvg_handle_close</link>                   (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="RsvgHandle">RsvgHandle</link>*         <link linkend="rsvg-handle-new-from-data">rsvg_handle_new_from_data</link>           (const <link linkend="guint8">guint8</link> *data,
                                                         <link linkend="gsize">gsize</link> data_len,
                                                         <link linkend="GError">GError</link> **error);
<link linkend="RsvgHandle">RsvgHandle</link>*         <link linkend="rsvg-handle-new-from-file">rsvg_handle_new_from_file</link>           (const <link linkend="gchar">gchar</link> *file_name,
                                                         <link linkend="GError">GError</link> **error);
                    <link linkend="RsvgDimensionData">RsvgDimensionData</link>;
<link linkend="void">void</link>                (<link linkend="RsvgSizeFunc">*RsvgSizeFunc</link>)                     (<link linkend="gint">gint</link> *width,
                                                         <link linkend="gint">gint</link> *height,
                                                         <link linkend="gpointer">gpointer</link> user_data);
<link linkend="void">void</link>                <link linkend="rsvg-handle-set-size-callback">rsvg_handle_set_size_callback</link>       (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="RsvgSizeFunc">RsvgSizeFunc</link> size_func,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> user_data_destroy);
const <link linkend="char">char</link>*         <link linkend="rsvg-handle-get-base-uri">rsvg_handle_get_base_uri</link>            (<link linkend="RsvgHandle">RsvgHandle</link> *handle);
<link linkend="void">void</link>                <link linkend="rsvg-handle-set-base-uri">rsvg_handle_set_base_uri</link>            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         const <link linkend="char">char</link> *base_uri);
const <link linkend="char">char</link>*         <link linkend="rsvg-handle-get-title">rsvg_handle_get_title</link>               (<link linkend="RsvgHandle">RsvgHandle</link> *handle);
const <link linkend="char">char</link>*         <link linkend="rsvg-handle-get-desc">rsvg_handle_get_desc</link>                (<link linkend="RsvgHandle">RsvgHandle</link> *handle);
<link linkend="void">void</link>                <link linkend="rsvg-handle-get-dimensions">rsvg_handle_get_dimensions</link>          (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="RsvgDimensionData">RsvgDimensionData</link> *dimension_data);
</synopsis>
</refsynopsisdiv>









<refsect1 role="desc">
<title role="desc.title">Description</title>
<para>
librsvg is a component used within software applications to enable support for SVG-format scalable graphics. In contrast to raster formats, scalable vector graphics provide users and artists a way to create, view, and provide imagery that is not limited to the pixel or dot density that an output device is capable of.
</para>
<para>
 Many software developers use the librsvg library to render SVG graphics. It is lightweight and portable.
</para>
</refsect1>

<refsect1 role="details">
<title role="details.title">Details</title>
<refsect2>
<title><anchor id="RsvgError" role="enum"/>enum RsvgError</title>
<indexterm><primary>RsvgError</primary></indexterm><programlisting>typedef enum {
    RSVG_ERROR_FAILED
} RsvgError;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="RSVG-ERROR:CAPS" role="macro"/>RSVG_ERROR</title>
<indexterm><primary>RSVG_ERROR</primary></indexterm><programlisting>#define RSVG_ERROR (rsvg_error_quark ())
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="rsvg-error-quark" role="function"/>rsvg_error_quark ()</title>
<indexterm><primary>rsvg_error_quark</primary></indexterm><programlisting><link linkend="GQuark">GQuark</link>              rsvg_error_quark                    (void);</programlisting>
<para>
The error domain for RSVG</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The error domain
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-init" role="function" condition="since:2.9"/>rsvg_init ()</title>
<indexterm role="2.9"><primary>rsvg_init</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_init                           (void);</programlisting>
<para>
Initializes librsvg</para>
<para>

</para><para role="since">Since  2.9
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-term" role="function" condition="since:2.9"/>rsvg_term ()</title>
<indexterm role="2.9"><primary>rsvg_term</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_term                           (void);</programlisting>
<para>
De-initializes librsvg</para>
<para>

</para><para role="since">Since  2.9
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-set-default-dpi" role="function" condition="since:2.8"/>rsvg_set_default_dpi ()</title>
<indexterm role="2.8"><primary>rsvg_set_default_dpi</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_set_default_dpi                (<link linkend="double">double</link> dpi);</programlisting>
<para>
Sets the DPI for the all future outgoing pixbufs. Common values are
75, 90, and 300 DPI. Passing a number &lt;= 0 to <link linkend="dpi"><type>dpi</type></link> will 
reset the DPI to whatever the default value happens to be.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dpi</parameter>&nbsp;:</term>
<listitem><simpara> Dots Per Inch (aka Pixels Per Inch)
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.8
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-set-default-dpi-x-y" role="function" condition="since:2.8"/>rsvg_set_default_dpi_x_y ()</title>
<indexterm role="2.8"><primary>rsvg_set_default_dpi_x_y</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_set_default_dpi_x_y            (<link linkend="double">double</link> dpi_x,
                                                         <link linkend="double">double</link> dpi_y);</programlisting>
<para>
Sets the DPI for the all future outgoing pixbufs. Common values are
75, 90, and 300 DPI. Passing a number &lt;= 0 to <link linkend="dpi"><type>dpi</type></link> will 
reset the DPI to whatever the default value happens to be.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>dpi_x</parameter>&nbsp;:</term>
<listitem><simpara> Dots Per Inch (aka Pixels Per Inch)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi_y</parameter>&nbsp;:</term>
<listitem><simpara> Dots Per Inch (aka Pixels Per Inch)
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.8
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-new" role="function"/>rsvg_handle_new ()</title>
<indexterm><primary>rsvg_handle_new</primary></indexterm><programlisting><link linkend="RsvgHandle">RsvgHandle</link>*         rsvg_handle_new                     (void);</programlisting>
<para>
Returns a new rsvg handle.  Must be freed with <parameter>g_object_unref</parameter>.  This
handle can be used for dynamically loading an image.  You need to feed it
data using <parameter>rsvg_handle_write</parameter>, then call <parameter>rsvg_handle_close</parameter> when done.
Afterwords, you can render it using Cairo or get a GdkPixbuf from it. When
finished, free with <link linkend="g-object-unref"><function>g_object_unref()</function></link>. No more than one image can be loaded 
with one handle.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A new <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-free" role="function" condition="deprecated:Use g_object_unref() instead."/>rsvg_handle_free ()</title>
<indexterm role="deprecated"><primary>rsvg_handle_free</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_handle_free                    (<link linkend="RsvgHandle">RsvgHandle</link> *handle);</programlisting>
<warning><para><literal>rsvg_handle_free</literal> is deprecated and should not be used in newly-written code. Use <link linkend="g-object-unref"><function>g_object_unref()</function></link> instead.</para></warning>
<para>
Frees <link linkend="handle"><type>handle</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-set-dpi" role="function" condition="since:2.8"/>rsvg_handle_set_dpi ()</title>
<indexterm role="2.8"><primary>rsvg_handle_set_dpi</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_handle_set_dpi                 (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="double">double</link> dpi);</programlisting>
<para>
Sets the DPI for the outgoing pixbuf. Common values are
75, 90, and 300 DPI. Passing a number &lt;= 0 to <link linkend="dpi"><type>dpi</type></link> will 
reset the DPI to whatever the default value happens to be.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi</parameter>&nbsp;:</term>
<listitem><simpara> Dots Per Inch (aka Pixels Per Inch)
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.8
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-set-dpi-x-y" role="function" condition="since:2.8"/>rsvg_handle_set_dpi_x_y ()</title>
<indexterm role="2.8"><primary>rsvg_handle_set_dpi_x_y</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_handle_set_dpi_x_y             (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="double">double</link> dpi_x,
                                                         <link linkend="double">double</link> dpi_y);</programlisting>
<para>
Sets the DPI for the outgoing pixbuf. Common values are
75, 90, and 300 DPI. Passing a number &lt;= 0 to <link linkend="dpi-x"><type>dpi_x</type></link> or <link linkend="dpi-y"><type>dpi_y</type></link> will 
reset the DPI to whatever the default value happens to be.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi_x</parameter>&nbsp;:</term>
<listitem><simpara> Dots Per Inch (aka Pixels Per Inch)
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dpi_y</parameter>&nbsp;:</term>
<listitem><simpara> Dots Per Inch (aka Pixels Per Inch)
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.8
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-write" role="function"/>rsvg_handle_write ()</title>
<indexterm><primary>rsvg_handle_write</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            rsvg_handle_write                   (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         const <link linkend="guchar">guchar</link> *buf,
                                                         <link linkend="gsize">gsize</link> count,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads the next <parameter>count</parameter> bytes of the image.  This will return <link linkend="TRUE:CAPS"><type>TRUE</type></link> if the data
was loaded successful, and <link linkend="FALSE:CAPS"><type>FALSE</type></link> if an error occurred.  In the latter case,
the loader will be closed, and will not accept further writes. If FALSE is
returned, <parameter>error</parameter> will be set to an error from the <link linkend="RSVG-ERROR:CAPS"><type>RSVG_ERROR</type></link> domain.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>buf</parameter>&nbsp;:</term>
<listitem><simpara> Pointer to svg data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>count</parameter>&nbsp;:</term>
<listitem><simpara> length of the <parameter>buf</parameter> buffer in bytes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> if the write was successful, or <link linkend="FALSE:CAPS"><type>FALSE</type></link> if there was an
error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-close" role="function"/>rsvg_handle_close ()</title>
<indexterm><primary>rsvg_handle_close</primary></indexterm><programlisting><link linkend="gboolean">gboolean</link>            rsvg_handle_close                   (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Closes <parameter>handle</parameter>, to indicate that loading the image is complete.  This will
return <link linkend="TRUE:CAPS"><type>TRUE</type></link> if the loader closed successfully.  Note that <parameter>handle</parameter> isn't
freed until <parameter>g_object_unref</parameter> is called.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="GError"><type>GError</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> <link linkend="TRUE:CAPS"><type>TRUE</type></link> if the loader closed successfully, or <link linkend="FALSE:CAPS"><type>FALSE</type></link> if there was
an error.
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-new-from-data" role="function" condition="since:2.14"/>rsvg_handle_new_from_data ()</title>
<indexterm role="2.14"><primary>rsvg_handle_new_from_data</primary></indexterm><programlisting><link linkend="RsvgHandle">RsvgHandle</link>*         rsvg_handle_new_from_data           (const <link linkend="guint8">guint8</link> *data,
                                                         <link linkend="gsize">gsize</link> data_len,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads the SVG specified by <link linkend="data"><type>data</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>data</parameter>&nbsp;:</term>
<listitem><simpara> The SVG data
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>data_len</parameter>&nbsp;:</term>
<listitem><simpara> The length of <link linkend="data"><type>data</type></link>, in bytes
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A RsvgHandle or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if an error occurs.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.14
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-new-from-file" role="function" condition="since:2.14"/>rsvg_handle_new_from_file ()</title>
<indexterm role="2.14"><primary>rsvg_handle_new_from_file</primary></indexterm><programlisting><link linkend="RsvgHandle">RsvgHandle</link>*         rsvg_handle_new_from_file           (const <link linkend="gchar">gchar</link> *file_name,
                                                         <link linkend="GError">GError</link> **error);</programlisting>
<para>
Loads the SVG specified by <link linkend="file-name"><type>file_name</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>file_name</parameter>&nbsp;:</term>
<listitem><simpara> The file name to load. If built with gnome-vfs, can be a URI.
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>error</parameter>&nbsp;:</term>
<listitem><simpara> return location for errors
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> A RsvgHandle or <link linkend="NULL:CAPS"><literal>NULL</literal></link> if an error occurs.
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.14
</para></refsect2>
<refsect2>
<title><anchor id="RsvgDimensionData" role="struct"/>RsvgDimensionData</title>
<indexterm><primary>RsvgDimensionData</primary></indexterm><programlisting>typedef struct {
        /**
	 * SVG's width, in pixels
	 */
    int width;

        /**
	 * SVG's height, in pixels
	 */
    int height;

        /**
	 * em
	 */
    gdouble em;

        /**
	 * ex
	 */
    gdouble ex;
} RsvgDimensionData;
</programlisting>
<para>

</para></refsect2>
<refsect2>
<title><anchor id="RsvgSizeFunc" role="function" condition="deprecated:Set up a cairo matrix and use rsvg_handle_render_cairo() instead."/>RsvgSizeFunc ()</title>
<indexterm role="deprecated"><primary>RsvgSizeFunc</primary></indexterm><programlisting><link linkend="void">void</link>                (*RsvgSizeFunc)                     (<link linkend="gint">gint</link> *width,
                                                         <link linkend="gint">gint</link> *height,
                                                         <link linkend="gpointer">gpointer</link> user_data);</programlisting>
<warning><para><literal>RsvgSizeFunc</literal> is deprecated and should not be used in newly-written code. Set up a cairo matrix and use <link linkend="rsvg-handle-render-cairo"><function>rsvg_handle_render_cairo()</function></link> instead.</para></warning>
<para>
Function to let a user of the library specify the SVG's dimensions
<parameter>width</parameter>: the ouput width the SVG should be
<parameter>height</parameter>: the output height the SVG should be
<parameter>user_data</parameter>: user data</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>width</parameter>&nbsp;:</term>
<listitem><simpara> Pointer to where to set/store the width
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>height</parameter>&nbsp;:</term>
<listitem><simpara> Pointer to where to set/store the height
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> User data pointer
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-set-size-callback" role="function" condition="deprecated:Set up a cairo matrix and use rsvg_handle_render_cairo() instead."/>rsvg_handle_set_size_callback ()</title>
<indexterm role="deprecated"><primary>rsvg_handle_set_size_callback</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_handle_set_size_callback       (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="RsvgSizeFunc">RsvgSizeFunc</link> size_func,
                                                         <link linkend="gpointer">gpointer</link> user_data,
                                                         <link linkend="GDestroyNotify">GDestroyNotify</link> user_data_destroy);</programlisting>
<warning><para><literal>rsvg_handle_set_size_callback</literal> is deprecated and should not be used in newly-written code. Set up a cairo matrix and use <link linkend="rsvg-handle-render-cairo"><function>rsvg_handle_render_cairo()</function></link> instead.</para></warning>
<para>
Sets the sizing function for the <parameter>handle</parameter>.  This function is called right
after the size of the image has been loaded.  The size of the image is passed
in to the function, which may then modify these values to set the real size
of the generated pixbuf.  If the image has no associated size, then the size
arguments are set to -1.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>size_func</parameter>&nbsp;:</term>
<listitem><simpara> A sizing function, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data</parameter>&nbsp;:</term>
<listitem><simpara> User data to pass to <parameter>size_func</parameter>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>user_data_destroy</parameter>&nbsp;:</term>
<listitem><simpara> Destroy function for <parameter>user_data</parameter>, or <link linkend="NULL:CAPS"><literal>NULL</literal></link>
</simpara></listitem></varlistentry>
</variablelist></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-get-base-uri" role="function" condition="since:2.9 (really present in 2.8 as well)"/>rsvg_handle_get_base_uri ()</title>
<indexterm role="2.9 (really present in 2.8 as well)"><primary>rsvg_handle_get_base_uri</primary></indexterm><programlisting>const <link linkend="char">char</link>*         rsvg_handle_get_base_uri            (<link linkend="RsvgHandle">RsvgHandle</link> *handle);</programlisting>
<para>
Gets the base uri for this <link linkend="RsvgHandle"><type>RsvgHandle</type></link>.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> the base uri, possibly null
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.9 (really present in 2.8 as well)
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-set-base-uri" role="function" condition="since:2.9"/>rsvg_handle_set_base_uri ()</title>
<indexterm role="2.9"><primary>rsvg_handle_set_base_uri</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_handle_set_base_uri            (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         const <link linkend="char">char</link> *base_uri);</programlisting>
<para>
Set the base URI for this SVG. This can only be called before <link linkend="rsvg-handle-write"><function>rsvg_handle_write()</function></link>
has been called.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>base_uri</parameter>&nbsp;:</term>
<listitem><simpara> The base uri
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.9
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-get-title" role="function" condition="since:2.4"/>rsvg_handle_get_title ()</title>
<indexterm role="2.4"><primary>rsvg_handle_get_title</primary></indexterm><programlisting>const <link linkend="char">char</link>*         rsvg_handle_get_title               (<link linkend="RsvgHandle">RsvgHandle</link> *handle);</programlisting>
<para>
Returns the SVG's title in UTF-8 or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. You must make a copy
of this title if you wish to use it after <link linkend="handle"><type>handle</type></link> has been freed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The SVG's title

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-get-desc" role="function" condition="since:2.4"/>rsvg_handle_get_desc ()</title>
<indexterm role="2.4"><primary>rsvg_handle_get_desc</primary></indexterm><programlisting>const <link linkend="char">char</link>*         rsvg_handle_get_desc                (<link linkend="RsvgHandle">RsvgHandle</link> *handle);</programlisting>
<para>
Returns the SVG's description in UTF-8 or <link linkend="NULL:CAPS"><literal>NULL</literal></link>. You must make a copy
of this description if you wish to use it after <link linkend="handle"><type>handle</type></link> has been freed.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> An <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><emphasis>Returns</emphasis>&nbsp;:</term><listitem><simpara> The SVG's description

</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.4
</para></refsect2>
<refsect2>
<title><anchor id="rsvg-handle-get-dimensions" role="function" condition="since:2.14"/>rsvg_handle_get_dimensions ()</title>
<indexterm role="2.14"><primary>rsvg_handle_get_dimensions</primary></indexterm><programlisting><link linkend="void">void</link>                rsvg_handle_get_dimensions          (<link linkend="RsvgHandle">RsvgHandle</link> *handle,
                                                         <link linkend="RsvgDimensionData">RsvgDimensionData</link> *dimension_data);</programlisting>
<para>
Get the SVG's size. Do not call from within the size_func callback, because an infinite loop will occur.</para>
<para>

</para><variablelist role="params">
<varlistentry><term><parameter>handle</parameter>&nbsp;:</term>
<listitem><simpara> A <link linkend="RsvgHandle"><type>RsvgHandle</type></link>
</simpara></listitem></varlistentry>
<varlistentry><term><parameter>dimension_data</parameter>&nbsp;:</term>
<listitem><simpara> A place to store the SVG's size
</simpara></listitem></varlistentry>
</variablelist><para role="since">Since  2.14
</para></refsect2>

</refsect1>




</refentry>
